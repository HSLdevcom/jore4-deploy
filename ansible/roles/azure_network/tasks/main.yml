---
- name: Sanity check for CIDR prefix
  fail:
    msg: "cidr_prefix {{ cidr_prefix }} is not valid. You should update the variable with a value that was reserved for your environment."
  when: not cidr_prefix is regex("[0-9]{1,3}[.][0-9]{1,3}[.][0-9]{1,3}")

- name: Check if the public subnet NSG exists
  shell: "az network nsg list --resource-group {{ az_resource_group_name }} --query \"[?name=='{{ az_public_nsg_name }}'].{id:id}[0].id\""
  register: public_nsg_id

- debug:
    msg: "Public subnet NSG id (empty if non-existent): {{ public_nsg_id.stdout }}"

- name: Create Azure Deployment for network
  azure_rm_deployment:
    resource_group: "{{ az_resource_group_name }}"
    location: "{{ az_region_name }}"
    name: "azure_network"
    parameters:
      project:
        value: "{{ az_project_name }}"
      environment:
        value: "{{ az_environment }}"
      vnetAddrPrefix:
        value: "{{ az_vnet_addr_prefix }}"
      privateSubnetAddrPrefix:
        value: "{{ az_private_subnet_addr_prefix }}"
      privateAciSubnetAddrPrefix:
        value: "{{ az_private_aci_subnet_addr_prefix }}"
      publicSubnetAddrPrefix:
        value: "{{ az_public_subnet_addr_prefix }}"
      gatewaySubnetAddrPrefix:
        value: "{{ az_gateway_subnet_addr_prefix }}"
      dbSubnetAddrPrefix:
        value: "{{ az_db_subnet_addr_prefix }}"
      bastionTrustedAddresses:
        value: "{{ az_bastion_host_trusted_ips }}"
      commonResourceGroupName:
        value: "{{ az_common_resource_group_name }}"
      routeTableName:
        value: "{{ az_route_table_name }}"
      publicNsgName:
        value: "{{ az_public_nsg_name }}"
      deployPublicNsg:
        value: "{{ true if (public_nsg_id.stdout == \"\") else false }}"
    tags:
      ansible: "workaround"
    template: "{{ lookup('file', 'templates/network.arm.json') }}"
