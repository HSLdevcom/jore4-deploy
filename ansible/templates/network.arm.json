{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "project": {
      "type": "string",
      "metadata": {
        "description": "The short name of the project. Usually same as the name of the subscription in Azure."
      }
    },
    "environment": {
      "type": "string",
      "metadata": {
        "description": "The target environment. Typically dev, test or prod."
      }
    },
    "bastionTrustedAddresses": {
      "type": "array",
      "metadata": {
        "description": "The IP addresses allowed to SSH into the environment."
      },
      "defaultValue": ["194.100.20.48/28"]
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "The region used for the resources."
      },
      "defaultValue": "[resourceGroup().location]"
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the target VNet."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-vnet')]"
    },
    "vnetAddrPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address prefix (e.g. '10.223.12.0/24') of the target VNet."
      }
    },
    "privateSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the private subnet."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-subnet-private')]"
    },
    "privateSubnetAddrPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address prefix (e.g. '10.223.12.0/25') of the private subnet."
      }
    },
    "privateAciSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the private ACI subnet."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-subnet-private-aci')]"
    },
    "privateAciSubnetAddrPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address prefix (e.g. '10.223.12.128/26') of the private ACI subnet."
      }
    },
    "publicSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the public subnet."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-subnet-public')]"
    },
    "publicSubnetAddrPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address prefix (e.g. '10.223.12.232/29') of the public subnet."
      }
    },
    "gatewaySubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the gateway subnet."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-subnet-gateway')]"
    },
    "gatewaySubnetAddrPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address prefix (e.g. '10.223.12.240/28') of the gateway subnet."
      }
    },
    "dbSubnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the db subnet."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-subnet-private-db')]"
    },
    "dbSubnetAddrPrefix": {
      "type": "string",
      "metadata": {
        "description": "The address prefix (e.g. '10.223.12.192/28') of the db subnet."
      }
    },
    "privateNsgName": {
      "type": "string",
      "metadata": {
        "description": "The name of the private Network Security Group."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-nsg-private')]"
    },
    "publicNsgName": {
      "type": "string",
      "metadata": {
        "description": "The name of the public Network Security Group."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-nsg-public')]"
    },
    "gatewayNsgName": {
      "type": "string",
      "metadata": {
        "description": "The name of the gateway Network Security Group."
      },
      "defaultValue": "[concat(parameters('project'), '-', parameters('environment'), '-nsg-gateway')]"
    },
    "commonResourceGroupName": {
      "type": "string",
      "metadata": {
        "description": "The name of the resource group common to all envs."
      },
      "defaultValue": "[concat(parameters('project'), '-common')]"
    },
    "routeTableName": {
      "type": "string",
      "metadata": {
        "description": "The name of the route table to use with all subnets."
      },
      "defaultValue": "[concat(parameters('project'), '-route')]"
    }
  },
  "variables": {
    "denyInternetRule": {
      "name": "deny_internet",
      "properties": {
        "protocol": "*",
        "sourcePortRange": "*",
        "destinationPortRange": "*",
        "sourceAddressPrefix": "Internet",
        "destinationAddressPrefix": "*",
        "access": "Deny",
        "priority": 1000,
        "direction": "Inbound",
        "sourcePortRanges": [],
        "destinationPortRanges": [],
        "sourceAddressPrefixes": [],
        "destinationAddressPrefixes": []
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('privateNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('publicNsgName'))]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('gatewayNsgName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["[parameters('vnetAddrPrefix')]"]
        },
        "subnets": [
          {
            "name": "[parameters('privateSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('privateSubnetAddrPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('privateNsgName'))]"
              },
              "routeTable": {
                "id": "[resourceId(parameters('commonResourceGroupName'), 'Microsoft.Network/routeTables', parameters('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('privateAciSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('privateAciSubnetAddrPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('privateNsgName'))]"
              },
              "routeTable": {
                "id": "[resourceId(parameters('commonResourceGroupName'), 'Microsoft.Network/routeTables', parameters('routeTableName'))]"
              },
              "delegations": [
                {
                  "name": "aciDelegation",
                  "properties": {
                    "serviceName": "Microsoft.ContainerInstance/containerGroups"
                  }
                }
              ]
            }
          },
          {
            "name": "[parameters('dbSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('dbSubnetAddrPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('privateNsgName'))]"
              },
              "routeTable": {
                "id": "[resourceId(parameters('commonResourceGroupName'), 'Microsoft.Network/routeTables', parameters('routeTableName'))]"
              },
              "delegations": [
                {
                  "name": "dbDelegation",
                  "properties": {
                    "serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
                  }
                }
              ]
            }
          },
          {
            "name": "[parameters('publicSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('publicSubnetAddrPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('publicNsgName'))]"
              },
              "routeTable": {
                "id": "[resourceId(parameters('commonResourceGroupName'), 'Microsoft.Network/routeTables', parameters('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters('gatewaySubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('gatewaySubnetAddrPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('gatewayNsgName'))]"
              },
              "routeTable": {
                "id": "[resourceId(parameters('commonResourceGroupName'), 'Microsoft.Network/routeTables', parameters('routeTableName'))]"
              }
            }
          }
        ],
        "virtualNetworkPeerings": [],
        "enableDdosProtection": false,
        "enableVmProtection": false
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "[parameters('publicNsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_SSH",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": "[parameters('bastionTrustedAddresses')]",
              "destinationAddressPrefixes": []
            }
          },
          "[variables('denyInternetRule')]"
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "[parameters('gatewayNsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "allow_HTTPS",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefix": "*",
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "allow_HTTP",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 150,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefix": "*",
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "allow_Azure",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "65200-65535",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefix": "*",
              "destinationAddressPrefixes": []
            }
          },
          "[variables('denyInternetRule')]"
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "[parameters('privateNsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": ["[variables('denyInternetRule')]"]
      }
    }
  ],
  "outputs": {},
  "functions": []
}
